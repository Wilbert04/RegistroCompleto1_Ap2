@page "/Estudiantes"
@page "/Estudiantes/{Id:int}"

@using RegistroCompleto1_Apl2.Models
@using RegistroCompleto1_Apl2.BLL

@inject IToastService Toast

<EditForm Model="estudiantes" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>
    <div class="card">
        <div class="card-heard">
            <h4>Registro de Estudiantes</h4>
        </div>

        <div class="card-body">
            <form>
                @*Id*@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>ID</label>
                            <InputNumber @bind-Value="estudiantes.Id" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                            </div>
                        </div>
                    </div>
                </div>

                @*Nombre*@
                <div class="form-group">
                    <label>Nombre:</label>
                    <InputText @bind-Value="estudiantes.Nombre" class="form-control col-5" />
                    <ValidationMessage For="@(() => estudiantes.Nombre)" />
                </div>

                @*Telefono*@4
                <div class="form-group">
                    <label>Teléfono:</label>
                    <InputText @bind-Value="estudiantes.Telefono" class="form-control col-5" />
                    <ValidationMessage For="@(() => estudiantes.Telefono)" />
                </div>

                @*Cedula*@
                <div class="form-group">
                    <label>Cedula:</label>
                    <InputText @bind-Value="estudiantes.Cedula" class="form-control col-5" />
                    <ValidationMessage For="@(() => estudiantes.Cedula)" />
                </div>

                @*Direccion*@
                <div class="form-group">
                    <label>Direccion:</label>
                    <InputText @bind-Value="" class="form-control col-5" />
                    <ValidationMessage For="@(() => estudiantes.Direccion)" />
                </div>

                @*Fecha*@
                <div class="form-group">
                    <label>Fecha:</label>
                    <InputDate @bind-Value="estudiantes.Fecha" class="form-control col-5" />
                    <ValidationMessage For="@(() =>estudiantes.Fecha)" />
                </div>


            </form>
        </div>
    </div>

    <div class="card-footer">
        <div class="form-group text-center" display: inline-block>
            <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
            <button type="submit" class="btn btn-lg btn-success">Guardar</button>
            <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
        </div>
    </div>

</EditForm>

@code {

    [Parameter]
    public int Id { get; set; }

    private Estudiantes estudiantes = new Estudiantes();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    } 

    public void Nuevo()
    {
        estudiantes = new Estudiantes();
    }

    private void Buscar()
    {
       
        if(estudiantes.Id>0)
        {
            var encontrado = EstudiantesBLL.Buscar(estudiantes.Id);

            if(encontrado != null)
                this.estudiantes= encontrado;
            else
                Toast.ShowWarning("No encontrado");
        }
    }

    private void Guardar()
    {
        bool guardo;

        guardo = EstudiantesBLL.Guardar(estudiantes);

        if(guardo)
        {
            Toast.ShowSuccess("Guardado Correctamente");
            Nuevo();
        }
        else
            Toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino= EstudiantesBLL.Eliminar(estudiantes.Id);

        if(elimino)
        {
            Nuevo();
            Toast.ShowSuccess("Eliminado Correctamente");

        }
        else
            Toast.ShowError("No fue posible eliminar");
    }




}
